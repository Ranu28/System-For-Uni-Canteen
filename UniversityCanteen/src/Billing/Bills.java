
package Billing;

import DatabaseConnection.DBconnect;

import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.stream.Stream;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Employee.CashierHomePage;
/**
 *
 * @author Lahiru Viraj
 */
public class Bills extends javax.swing.JFrame {

    /**
     * Creates new form Bills
     */
    public Bills() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnBBurgers = new javax.swing.JButton();
        btnBRolls = new javax.swing.JButton();
        btnBBuns = new javax.swing.JButton();
        btnBRice = new javax.swing.JButton();
        btnBSandwich = new javax.swing.JButton();
        btnBKottu = new javax.swing.JButton();
        btnBNoodles = new javax.swing.JButton();
        btnBPizza = new javax.swing.JButton();
        btnBCutlet = new javax.swing.JButton();
        btnBPastry = new javax.swing.JButton();
        btnBMilk = new javax.swing.JButton();
        btnBDrinks = new javax.swing.JButton();
        btnBSweets = new javax.swing.JButton();
        btnBSoft = new javax.swing.JButton();
        btnBBday = new javax.swing.JButton();
        btnBCake = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableselection = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtBID = new javax.swing.JTextField();
        txtBName = new javax.swing.JTextField();
        txtBPrice = new javax.swing.JTextField();
        txtBQty = new javax.swing.JTextField();
        btnBAdd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtBTot = new javax.swing.JTextField();
        txtBPaid = new javax.swing.JTextField();
        txtBBalance = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        btnHomePage = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        jLabel1.setText("BILLING");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Selection:");

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnBBurgers.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        btnBBurgers.setText("Burgers");
        btnBBurgers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBBurgersActionPerformed(evt);
            }
        });

        btnBRolls.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        btnBRolls.setText("Rolls");
        btnBRolls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBRollsActionPerformed(evt);
            }
        });

        btnBBuns.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        btnBBuns.setText("Buns");
        btnBBuns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBBunsActionPerformed(evt);
            }
        });

        btnBRice.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        btnBRice.setText("Fried rice");
        btnBRice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBRiceActionPerformed(evt);
            }
        });

        btnBSandwich.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        btnBSandwich.setText("Sandwitches");
        btnBSandwich.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBSandwichActionPerformed(evt);
            }
        });

        btnBKottu.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        btnBKottu.setText("Kottu");
        btnBKottu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBKottuActionPerformed(evt);
            }
        });

        btnBNoodles.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        btnBNoodles.setText("Noodles");
        btnBNoodles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBNoodlesActionPerformed(evt);
            }
        });

        btnBPizza.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        btnBPizza.setText("Mini Pizza");
        btnBPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBPizzaActionPerformed(evt);
            }
        });

        btnBCutlet.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        btnBCutlet.setText("Cutlets");
        btnBCutlet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBCutletActionPerformed(evt);
            }
        });

        btnBPastry.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        btnBPastry.setText("Pastries");
        btnBPastry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBPastryActionPerformed(evt);
            }
        });

        btnBMilk.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        btnBMilk.setText("Milk packets");
        btnBMilk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBMilkActionPerformed(evt);
            }
        });

        btnBDrinks.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        btnBDrinks.setText("Other drinks");
        btnBDrinks.setToolTipText("");
        btnBDrinks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBDrinksActionPerformed(evt);
            }
        });

        btnBSweets.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        btnBSweets.setText("Sweets");
        btnBSweets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBSweetsActionPerformed(evt);
            }
        });

        btnBSoft.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        btnBSoft.setText("Soft Drinks");
        btnBSoft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBSoftActionPerformed(evt);
            }
        });

        btnBBday.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        btnBBday.setText("Bday cakes");
        btnBBday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBBdayActionPerformed(evt);
            }
        });

        btnBCake.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        btnBCake.setText("Cake pieces");
        btnBCake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBCakeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnBCutlet, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnBKottu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnBBurgers, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnBPastry)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnBRolls, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnBRice, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnBSweets)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnBPizza)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnBBday, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnBNoodles)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnBBuns, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnBSandwich))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(btnBMilk)
                                .addGap(18, 18, 18)
                                .addComponent(btnBDrinks)
                                .addGap(18, 18, 18)
                                .addComponent(btnBCake, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btnBSoft, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBBurgers)
                    .addComponent(btnBPastry)
                    .addComponent(btnBRolls)
                    .addComponent(btnBRice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBKottu)
                    .addComponent(btnBNoodles)
                    .addComponent(btnBBuns)
                    .addComponent(btnBSandwich))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBCutlet)
                            .addComponent(btnBSweets))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBCake)
                            .addComponent(btnBMilk)
                            .addComponent(btnBDrinks)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBPizza)
                        .addComponent(btnBBday)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBSoft)
                .addGap(152, 152, 152))
        );

        tableselection.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Price"
            }
        ));
        tableselection.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableselectionMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableselection);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("Calculation Details:");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Product Details");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("Product ID");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setText("Name");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("Price");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setText("Quantity");

        txtBQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBQtyKeyTyped(evt);
            }
        });

        btnBAdd.setFont(new java.awt.Font("Georgia", 3, 24)); // NOI18N
        btnBAdd.setText("ADD");
        btnBAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBAddMouseClicked(evt);
            }
        });
        btnBAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBAddActionPerformed(evt);
            }
        });
        btnBAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBAddKeyPressed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food  ID", "Food  Name", "Price", "Quantity"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel9.setText("TOTAL");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel10.setText("PAID AMOUNT");

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 23)); // NOI18N
        jLabel11.setText("BALANCE");

        txtBTot.setText("0");

        txtBPaid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBPaidKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBPaidKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtBBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtBTot, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(txtBTot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtBPaid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtBBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setFont(new java.awt.Font("Dialog", 1, 23)); // NOI18N
        jButton1.setText("SAVE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 1, 23)); // NOI18N
        jButton2.setText("RESET");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnHomePage.setFont(new java.awt.Font("Dialog", 1, 23)); // NOI18N
        btnHomePage.setText("Home Page");
        btnHomePage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomePageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(101, 101, 101)
                .addComponent(jLabel12)
                .addGap(793, 793, 793))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBID, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                            .addComponent(txtBName)
                            .addComponent(txtBPrice)
                            .addComponent(txtBQty)))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnHomePage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnBAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(7, 7, 7)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(72, 72, 72))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtBID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtBName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(txtBPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txtBQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addComponent(btnBAdd)))
                        .addGap(2, 2, 2)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(btnHomePage)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBBurgersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBBurgersActionPerformed
        
        try {
            String query = "SELECT * FROM fooditems WHERE category='Burgers'";
            ResultSet rs = DBconnect.search(query);
            DefaultTableModel dtm = (DefaultTableModel) tableselection.getModel();
            dtm.setRowCount(0);
            while (rs.next()) {                
                
                String id = rs.getString("fid");
                String name = rs.getString("name");
                String price = rs.getString("price");
                
                Object[] row = {id, name, price};
                
                dtm.addRow(row);
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_btnBBurgersActionPerformed

    private void btnBBunsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBBunsActionPerformed
        
        try {
            String query = "SELECT * FROM fooditems WHERE category='Buns'";
            ResultSet rs = DBconnect.search(query);
            
            DefaultTableModel dtm = (DefaultTableModel) tableselection.getModel();
            dtm.setRowCount(0);
            
            while (rs.next()) {                
                
                String id = rs.getString("fid");
                String name = rs.getString("name");
                String price = rs.getString("price");
                
                Object[] row = {id, name, price};
                
                
                
                dtm.addRow(row);
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_btnBBunsActionPerformed

    private void btnBPastryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBPastryActionPerformed
        try {
            String query = "SELECT * FROM fooditems WHERE category='Pastries'";
            ResultSet rs = DBconnect.search(query);
            
            DefaultTableModel dtm = (DefaultTableModel) tableselection.getModel();
            dtm.setRowCount(0);
            
            while (rs.next()) {                
                
                String id = rs.getString("fid");
                String name = rs.getString("name");
                String price = rs.getString("price");
                
                Object[] row = {id, name, price};
                
                
                dtm.addRow(row);
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBPastryActionPerformed

    private void btnBRollsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBRollsActionPerformed
        try {
            String query = "SELECT * FROM fooditems WHERE category='Rolls'";
            ResultSet rs = DBconnect.search(query);
            
            DefaultTableModel dtm = (DefaultTableModel) tableselection.getModel();
            dtm.setRowCount(0);
            
            while (rs.next()) {                
                
                String id = rs.getString("fid");
                String name = rs.getString("name");
                String price = rs.getString("price");
                
                Object[] row = {id, name, price};
                
                
                dtm.addRow(row);
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBRollsActionPerformed

    private void btnBRiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBRiceActionPerformed
        try {
            String query = "SELECT * FROM fooditems WHERE category='Fried Rice'";
            ResultSet rs = DBconnect.search(query);
            
            DefaultTableModel dtm = (DefaultTableModel) tableselection.getModel();
            dtm.setRowCount(0);
            
            while (rs.next()) {                
                
                String id = rs.getString("fid");
                String name = rs.getString("name");
                String price = rs.getString("price");
                
                Object[] row = {id, name, price};
                
                
                dtm.addRow(row);
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBRiceActionPerformed

    private void btnBKottuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBKottuActionPerformed
        try {
            String query = "SELECT * FROM fooditems WHERE category='Kottu'";
            ResultSet rs;
            rs = DBconnect.search(query);
            
            DefaultTableModel dtm = (DefaultTableModel) tableselection.getModel();
            dtm.setRowCount(0);
            
            while (rs.next()) {                
                
                String id = rs.getString("fid");
                String name = rs.getString("name");
                String price = rs.getString("price");
                
                Object[] row = {id, name, price};
                
                
                dtm.addRow(row);
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBKottuActionPerformed

    private void btnBNoodlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBNoodlesActionPerformed
        try {
            String query = "SELECT * FROM fooditems WHERE category='Noodles'";
            ResultSet rs = DBconnect.search(query);
            
            DefaultTableModel dtm = (DefaultTableModel) tableselection.getModel();
            dtm.setRowCount(0);
            
            while (rs.next()) {                
                
                String id = rs.getString("fid");
                String name = rs.getString("name");
                String price = rs.getString("price");
                
                Object[] row = {id, name, price};
                
                dtm.addRow(row);
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBNoodlesActionPerformed

    private void btnBSandwichActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBSandwichActionPerformed
        try {
            String query = "SELECT * FROM fooditems WHERE category='Sandwitches'";
            ResultSet rs = DBconnect.search(query);
            
            DefaultTableModel dtm = (DefaultTableModel) tableselection.getModel();
            dtm.setRowCount(0);
            
            while (rs.next()) {                
                
                String id = rs.getString("fid");
                String name = rs.getString("name");
                String price = rs.getString("price");
                
                Object[] row = {id, name, price};
                
                
                dtm.addRow(row);
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBSandwichActionPerformed

    private void btnBCutletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBCutletActionPerformed
        try {
            String query = "SELECT * FROM fooditems WHERE category='Cutlets'";
            ResultSet rs = DBconnect.search(query);
            
            DefaultTableModel dtm = (DefaultTableModel) tableselection.getModel();
            dtm.setRowCount(0);
            
            while (rs.next()) {                
                
                String id = rs.getString("fid");
                String name = rs.getString("name");
                String price = rs.getString("price");
                
                Object[] row = {id, name, price};
                
                dtm.addRow(row);
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBCutletActionPerformed

    private void btnBSweetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBSweetsActionPerformed
        try {
            String query = "SELECT * FROM fooditems WHERE category='Sweets'";
            ResultSet rs = DBconnect.search(query);
            
            DefaultTableModel dtm = (DefaultTableModel) tableselection.getModel();
            dtm.setRowCount(0);
            
            while (rs.next()) {                
                
                String id = rs.getString("fid");
                String name = rs.getString("name");
                String price = rs.getString("price");
                
                Object[] row = {id, name, price};
                
                dtm.addRow(row);
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBSweetsActionPerformed

    private void btnBPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBPizzaActionPerformed
        try {
            String query = "SELECT * FROM fooditems WHERE category='Mini Pizza'";
            ResultSet rs = DBconnect.search(query);
            
            DefaultTableModel dtm = (DefaultTableModel) tableselection.getModel();
            dtm.setRowCount(0);
            
            while (rs.next()) {                
                
                String id = rs.getString("fid");
                String name = rs.getString("name");
                String price = rs.getString("price");
                
                Object[] row = {id, name, price};
                
                dtm.addRow(row);
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBPizzaActionPerformed

    private void btnBBdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBBdayActionPerformed
        try {
            String query = "SELECT * FROM fooditems WHERE category='Bday cakes'";
            ResultSet rs = DBconnect.search(query);
            
            DefaultTableModel dtm = (DefaultTableModel) tableselection.getModel();
            dtm.setRowCount(0);
            
            while (rs.next()) {                
                
                String id = rs.getString("fid");
                String name = rs.getString("name");
                String price = rs.getString("price");
                
                Object[] row = {id, name, price};
                
                dtm.addRow(row);
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBBdayActionPerformed

    private void btnBMilkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBMilkActionPerformed
        try {
            String query = "SELECT * FROM fooditems WHERE category='Milk packets'";
            ResultSet rs = DBconnect.search(query);
            
            DefaultTableModel dtm = (DefaultTableModel) tableselection.getModel();
            dtm.setRowCount(0);
            
            while (rs.next()) {                
                
                String id = rs.getString("fid");
                String name = rs.getString("name");
                String price = rs.getString("price");
                
                Object[] row = {id, name, price};
                
                dtm.addRow(row);
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBMilkActionPerformed

    private void btnBDrinksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBDrinksActionPerformed
        try {
            String query = "SELECT * FROM fooditems WHERE category='Other drinks'";
            ResultSet rs = DBconnect.search(query);
            
            DefaultTableModel dtm = (DefaultTableModel) tableselection.getModel();
            dtm.setRowCount(0);
            
            while (rs.next()) {                
                
                String id = rs.getString("fid");
                String name = rs.getString("name");
                String price = rs.getString("price");
                
                Object[] row = {id, name, price};
                
                dtm.addRow(row);
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBDrinksActionPerformed

    private void btnBCakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBCakeActionPerformed
        try {
            String query = "SELECT * FROM fooditems WHERE category='Cake pieces'";
            ResultSet rs = DBconnect.search(query);
            
            DefaultTableModel dtm = (DefaultTableModel) tableselection.getModel();
            dtm.setRowCount(0);
            
            while (rs.next()) {                
                
                String id = rs.getString("fid");
                String name = rs.getString("name");
                String price = rs.getString("price");
                
                Object[] row = {id, name, price};
                
                dtm.addRow(row);
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBCakeActionPerformed

    private void btnBSoftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBSoftActionPerformed
        try {
            String query = "SELECT * FROM fooditems WHERE category='Soft Drinks'";
            ResultSet rs = DBconnect.search(query);
            
            DefaultTableModel dtm = (DefaultTableModel) tableselection.getModel();
            dtm.setRowCount(0);
            
            while (rs.next()) {                
                
                String id = rs.getString("fid");
                String name = rs.getString("name");
                String price = rs.getString("price");
                
                Object[] row = {id, name, price};
                
                dtm.addRow(row);
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBSoftActionPerformed

    private void tableselectionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableselectionMouseClicked
        
        try {
            
            DefaultTableModel dtm = (DefaultTableModel) tableselection.getModel();
            int selectedrow = tableselection.getSelectedRow();
            String id = (String) dtm.getValueAt(selectedrow, 0);
            
            String query = "SELECT * FROM fooditems WHERE fid='" + id + "'";
            ResultSet rs = DBconnect.search(query);
            
            while (rs.next()) {                
                
                String pid = rs.getString("fid");
                String name = rs.getString("name");
                String price = rs.getString("price");
                
                txtBID.setText(pid);
                txtBName.setText(name);
                txtBPrice.setText(price);
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        

    }//GEN-LAST:event_tableselectionMouseClicked

    private void btnBAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBAddActionPerformed
        
        try {
            String id = txtBID.getText();
            String name = txtBName.getText();
            String price = txtBPrice.getText();
            String qty = txtBQty.getText();
            
            if(qty.isEmpty()){
            
                JOptionPane.showMessageDialog(null, "Please Fill The Quantity Field", "Attention", JOptionPane.WARNING_MESSAGE);
                
            }else{
            
            Object[] row1 = {id, name, price, qty};
            
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.addRow(row1);
            
            txtBID.setText("");
            txtBName.setText("");
            txtBPrice.setText("");
            txtBQty.setText("");
            }
            
        } catch (Exception e) {
            
            e.printStackTrace();
            
        }
        
    }//GEN-LAST:event_btnBAddActionPerformed

    private void btnBAddKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBAddKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBAddKeyPressed

    private void btnBAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBAddMouseClicked
        double total = 0;
        
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            
            String price = jTable1.getValueAt(i, 2).toString();
            String qty = jTable1.getValueAt(i, 3).toString();
            
            double pricedouble = Double.parseDouble(price);
            double qtydouble = Double.parseDouble(qty);
            
            Double multiple = pricedouble * qtydouble;
            
            total += multiple;
        }

        //String totaltxt = txtBTot.getText();
        //double totaltxtDouble = Double.parseDouble(totaltxt);
        //total = total + totaltxtDouble;
        String tot = Double.toString(total);
        
        txtBTot.setText(tot);
        
    }//GEN-LAST:event_btnBAddMouseClicked

    private void txtBPaidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBPaidKeyReleased
        String total = txtBTot.getText();
        String paid = txtBPaid.getText();
        
        double total1 = Double.parseDouble(total);
        double paid1 = Double.parseDouble(paid);
        
        double balance = paid1 - total1;
        
        String balance1 = Double.toString(balance);
        
        txtBBalance.setText(balance1);
        
    }//GEN-LAST:event_txtBPaidKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        try {
            
            String total = txtBTot.getText();
            String paid = txtBPaid.getText();
            String balance = txtBBalance.getText();
            String datetime = new SimpleDateFormat("yyyy-MM-dd_HH:mm:ss").format(Calendar.getInstance().getTime());
            
            StringBuilder sb = new StringBuilder();
            
            sb.append(String.format("%s %50s%n", "A", " NSBM Canteen"));
            sb.append(String.format("%s %48s%n", "A", "Receipt"));
            sb.append(String.format("%s %48s%n", "A", datetime));
            sb.append(String.format("%s %n", "A"));
            sb.append(String.format("%s %-20s %-20s %-20s %-20s%n", "A", "Food ID", "Food Name", "Price", "Quantity"));
            sb.append(String.format("%s %-20s %-20s %-20s %-20s%n", "A", "--------------", "--------------", "--------------", "--------------"));
            
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                
                String id = jTable1.getValueAt(i, 0).toString();
                String name = jTable1.getValueAt(i, 1).toString();
                String price = jTable1.getValueAt(i, 2).toString();
                String qty = jTable1.getValueAt(i, 3).toString();
                
                sb.append(String.format("%s %-27s %-27s %-27s %-27s%n", "B", id, name, price, qty));
            }
            
            sb.append(String.format("%s %n", "A"));
            sb.append(String.format("%s %-20s %-20s %-20s%n", "A", "--------------", "--------------", "--------------"));
            sb.append(String.format("%s %-20s %-20s %-20s%n", "A", "--------------", "--------------", "--------------"));
            sb.append(String.format("%s %-20s %-20s %-20s%n", "A", "--------------", "--------------", "--------------"));
            sb.append(String.format("%s %n", "A"));
            sb.append(String.format("%s %-20s %-20s %-20s%n", "A", "Total", "Paid", "Balance"));
            sb.append(String.format("%s %-20s %-20s %-20s%n", "B", total, paid, balance));
            sb.append(String.format("%s %n", "A"));
            sb.append(String.format("%s %n", "A"));
            sb.append(String.format("%s %50s%n", "A", "Thank You"));
            sb.append(String.format("%s %50s%n", "A", "Come Again"));
            sb.append(String.format("%s %52s%n", "A", "--------------"));
            
            BufferedWriter output = null;
            try {
                
                Stream<Path> files = Files.list(Paths.get("C:\\Users\\ranup\\Desktop\\bill"));
                int count = (int) files.count();
                
                for (int i = 0; i <= count; i++) {
                    
                    File file = new File("C:\\Users\\ranup\\Desktop\\bill" + i);
                    output = new BufferedWriter(new FileWriter(file));
                    output.write(sb.toString());
                    
                    JOptionPane.showMessageDialog(null, "Bill Generated", "Message", JOptionPane.INFORMATION_MESSAGE);
                    
                }
                
            } catch (IOException e) {
                e.printStackTrace();
            } finally {
                if (output != null) {
                    output.close();
                }
            }
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Bill Generating fail", "Error", JOptionPane.ERROR_MESSAGE);
        }
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DefaultTableModel dtm1 = (DefaultTableModel) jTable1.getModel();
        DefaultTableModel dtm2 = (DefaultTableModel) tableselection.getModel();
        
        dtm1.setRowCount(0);
        dtm2.setRowCount(0);
        
        txtBTot.setText("0");
        txtBPaid.setText("");
        txtBBalance.setText("");
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtBQtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBQtyKeyTyped
        if (evt.getID() == KeyEvent.KEY_TYPED) {
            char inputChar = evt.getKeyChar();
            if (inputChar >= '0' && inputChar <= '9') {
                String text = txtBQty.getText() + inputChar;
                System.out.println("Number :- " + Integer.parseInt(text));
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtBQtyKeyTyped

    private void txtBPaidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBPaidKeyTyped
        if (evt.getID() == KeyEvent.KEY_TYPED) {
            char inputChar = evt.getKeyChar();
            if (inputChar >= '0' && inputChar <= '9') {
                String text = txtBPaid.getText() + inputChar;
                System.out.println("Number :- " + Integer.parseInt(text));
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtBPaidKeyTyped

    private void btnHomePageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomePageActionPerformed
        CashierHomePage chp = new CashierHomePage();
        chp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnHomePageActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bills.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bills.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bills.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bills.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bills().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBAdd;
    private javax.swing.JButton btnBBday;
    private javax.swing.JButton btnBBuns;
    private javax.swing.JButton btnBBurgers;
    private javax.swing.JButton btnBCake;
    private javax.swing.JButton btnBCutlet;
    private javax.swing.JButton btnBDrinks;
    private javax.swing.JButton btnBKottu;
    private javax.swing.JButton btnBMilk;
    private javax.swing.JButton btnBNoodles;
    private javax.swing.JButton btnBPastry;
    private javax.swing.JButton btnBPizza;
    private javax.swing.JButton btnBRice;
    private javax.swing.JButton btnBRolls;
    private javax.swing.JButton btnBSandwich;
    private javax.swing.JButton btnBSoft;
    private javax.swing.JButton btnBSweets;
    private javax.swing.JButton btnHomePage;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tableselection;
    private javax.swing.JTextField txtBBalance;
    private javax.swing.JTextField txtBID;
    private javax.swing.JTextField txtBName;
    private javax.swing.JTextField txtBPaid;
    private javax.swing.JTextField txtBPrice;
    private javax.swing.JTextField txtBQty;
    private javax.swing.JTextField txtBTot;
    // End of variables declaration//GEN-END:variables
}
